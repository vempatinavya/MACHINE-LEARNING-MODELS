# -*- coding: utf-8 -*-
"""
Created on Thu May 12 10:47:39 2022

@author: Navya
"""
import pandas as pd
import numpy as np
#import pickle
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
#from sklearn.metrics import accuracy_score
#from sklearn.metrics import precision_score
#from sklearn.metrics import recall_score
d=pd.read_csv(r'C:\Users\Navya\OneDrive\Desktop\news\static\finalproject.csv')
#d=pd.read_csv(r'C:\Users\Navya\OneDrive\Desktop\finalproject.csv')

a=[]
for i in range(len(d)):
    a.append(d.loc[i])
b=[]
for i in a:
    b.append(str(list(i)).split(':'))

x=[]
y=[]
for i in range(len(b)):
    x.append(b[i][1])
    y.append(b[i][6])

x1=[]
y1=[]
for i in range(len(x)):
    x1.append(x[i].split(',')[0][2:-1])
    y1.append(y[i][2:-8])
    
data=pd.DataFrame()
data['category']=x1
data['title']=y1

dt = data
print(dt.head())

dt.isnull().sum()

dt["category"].value_counts()

dt = dt[["title", "category"]]

x = np.array(dt["title"])
y = np.array(dt["category"])

cv = CountVectorizer()
X = cv.fit_transform(x)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.40, random_state=42)


model = RandomForestClassifier()
model.fit(X_train,y_train)
ypred=model.predict(X_test)

#print(accuracy_score(y_test,ypred))
#preci = precision_score(y_test, ypred,average='micro')
#print(preci)
"""
with open('sample.obj','wb') as  fp:
    pickle.dump(model,fp)
with open('sample.obj','rb') as fp:
    model=pickle.load(fp)
 """   
user = input("Enter a Text: ")
dt = cv.transform([user]).toarray()
output = model.predict(dt)
print(output)
